{"ast":null,"code":"import { callFunctionInHostAndHandleResponse as t } from \"../../internal/communication.js\";\nimport { ensureInitialized as r } from \"../../internal/internalAPIs.js\";\nimport { SimpleTypeResponseHandler as e, ResponseHandler as n } from \"../../internal/responseHandler.js\";\nimport { getApiVersionTag as o } from \"../../internal/telemetry.js\";\nimport { runtime as a } from \"../../public/runtime.js\";\nimport { isSupported as s } from \"./hostEntity.js\";\nimport { ErrorCode as i } from \"../../public/interfaces.js\";\nconst l = \"v2\";\nclass d extends n {\n  validate(t) {\n    return \"ConfigurableTab\" === t.tabType;\n  }\n  deserialize(t) {\n    return t;\n  }\n}\nclass c {\n  constructor(t) {\n    this.configurableTabInstance = t;\n  }\n  serialize() {\n    return this.configurableTabInstance;\n  }\n}\nclass u {\n  constructor(t) {\n    this.hostEntityId = t;\n  }\n  serialize() {\n    return this.hostEntityId;\n  }\n}\nclass E extends n {\n  validate(t) {\n    return \"ConfigurableTab\" === t.tabType || \"StaticTab\" === t.tabType;\n  }\n  deserialize(t) {\n    return t;\n  }\n}\nclass h {\n  constructor(t) {\n    this.hostEntityTabInstance = t;\n  }\n  serialize() {\n    return this.hostEntityTabInstance;\n  }\n}\nclass p extends n {\n  validate(t) {\n    return t.allTabs && t.allTabs.forEach(t => {}), !0;\n  }\n  deserialize(t) {\n    return t;\n  }\n}\nfunction f(e, n) {\n  if (r(a), !y()) throw new Error(\"Error code: \".concat(i.NOT_SUPPORTED_ON_PLATFORM, \", message: Not supported on platform\"));\n  if (I(e.threadId), n && 0 === n.length) throw new Error(\"Error code: \".concat(i.INVALID_ARGUMENTS, \", message: App types cannot be an empty array\"));\n  return t(\"hostEntity.tab.addAndConfigure\", [new u(e), n], new E(), o(l, \"hostEntity.tab.addAndConfigure\"));\n}\nfunction m(e) {\n  if (r(a), !y()) throw new Error(\"Error code: \".concat(i.NOT_SUPPORTED_ON_PLATFORM, \", message: Not supported on platform\"));\n  return I(e.threadId), t(\"hostEntity.tab.getAll\", [new u(e)], new p(), o(l, \"hostEntity.tab.getAll\"));\n}\nfunction b(e, n) {\n  if (r(a), !y()) throw new Error(\"Error code: \".concat(i.NOT_SUPPORTED_ON_PLATFORM, \", message: Not supported on platform\"));\n  return g(e), I(n.threadId), t(\"hostEntity.tab.reconfigure\", [new c(e), new u(n)], new d(), o(l, \"hostEntity.tab.reconfigure\"));\n}\nfunction T(e, n) {\n  if (r(a), !y()) throw new Error(\"Error code: \".concat(i.NOT_SUPPORTED_ON_PLATFORM, \", message: Not supported on platform\"));\n  return g(e), I(n.threadId), t(\"hostEntity.tab.rename\", [new c(e), new u(n)], new d(), o(l, \"hostEntity.tab.rename\"));\n}\nfunction w(n, s) {\n  if (r(a), !y()) throw new Error(\"Error code: \".concat(i.NOT_SUPPORTED_ON_PLATFORM, \", message: Not supported on platform\"));\n  return I(s.threadId), g(n), t(\"hostEntity.tab.remove\", [new h(n), new u(s)], new e(), o(l, \"hostEntity.tab.remove\"));\n}\nfunction y() {\n  var t;\n  return !!(r(a) && s() && (null === (t = a.supports.hostEntity) || void 0 === t ? void 0 : t.tab));\n}\nfunction I(t) {\n  if (!t || 0 == t.length) throw new Error(\"Error code: \".concat(i.INVALID_ARGUMENTS, \", message: ThreadId cannot be null or empty\"));\n}\nfunction g(t) {\n  if (!(null == t ? void 0 : t.internalTabInstanceId) || 0 === t.internalTabInstanceId.length) throw new Error(\"Error code: \".concat(i.INVALID_ARGUMENTS, \", message: TabId cannot be null or empty\"));\n}\nexport { f as addAndConfigure, m as getAll, y as isSupported, b as reconfigure, w as remove, T as rename };","map":{"version":3,"names":["callFunctionInHostAndHandleResponse","t","ensureInitialized","r","SimpleTypeResponseHandler","e","ResponseHandler","n","getApiVersionTag","o","runtime","a","isSupported","s","ErrorCode","i","l","d","validate","tabType","deserialize","c","constructor","configurableTabInstance","serialize","u","hostEntityId","E","h","hostEntityTabInstance","p","allTabs","forEach","f","y","Error","concat","NOT_SUPPORTED_ON_PLATFORM","I","threadId","length","INVALID_ARGUMENTS","m","b","g","T","w","supports","hostEntity","tab","internalTabInstanceId","addAndConfigure","getAll","reconfigure","remove","rename"],"sources":["D:/KattSafe/pdf-qa-frontend/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/private/hostEntity/tab.js"],"sourcesContent":["import{callFunctionInHostAndHandleResponse as t}from\"../../internal/communication.js\";import{ensureInitialized as r}from\"../../internal/internalAPIs.js\";import{SimpleTypeResponseHandler as e,ResponseHandler as n}from\"../../internal/responseHandler.js\";import{getApiVersionTag as o}from\"../../internal/telemetry.js\";import{runtime as a}from\"../../public/runtime.js\";import{isSupported as s}from\"./hostEntity.js\";import{ErrorCode as i}from\"../../public/interfaces.js\";const l=\"v2\";class d extends n{validate(t){return\"ConfigurableTab\"===t.tabType}deserialize(t){return t}}class c{constructor(t){this.configurableTabInstance=t}serialize(){return this.configurableTabInstance}}class u{constructor(t){this.hostEntityId=t}serialize(){return this.hostEntityId}}class E extends n{validate(t){return\"ConfigurableTab\"===t.tabType||\"StaticTab\"===t.tabType}deserialize(t){return t}}class h{constructor(t){this.hostEntityTabInstance=t}serialize(){return this.hostEntityTabInstance}}class p extends n{validate(t){return t.allTabs&&t.allTabs.forEach((t=>{})),!0}deserialize(t){return t}}function f(e,n){if(r(a),!y())throw new Error(`Error code: ${i.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);if(I(e.threadId),n&&0===n.length)throw new Error(`Error code: ${i.INVALID_ARGUMENTS}, message: App types cannot be an empty array`);return t(\"hostEntity.tab.addAndConfigure\",[new u(e),n],new E,o(l,\"hostEntity.tab.addAndConfigure\"))}function m(e){if(r(a),!y())throw new Error(`Error code: ${i.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);return I(e.threadId),t(\"hostEntity.tab.getAll\",[new u(e)],new p,o(l,\"hostEntity.tab.getAll\"))}function b(e,n){if(r(a),!y())throw new Error(`Error code: ${i.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);return g(e),I(n.threadId),t(\"hostEntity.tab.reconfigure\",[new c(e),new u(n)],new d,o(l,\"hostEntity.tab.reconfigure\"))}function T(e,n){if(r(a),!y())throw new Error(`Error code: ${i.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);return g(e),I(n.threadId),t(\"hostEntity.tab.rename\",[new c(e),new u(n)],new d,o(l,\"hostEntity.tab.rename\"))}function w(n,s){if(r(a),!y())throw new Error(`Error code: ${i.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);return I(s.threadId),g(n),t(\"hostEntity.tab.remove\",[new h(n),new u(s)],new e,o(l,\"hostEntity.tab.remove\"))}function y(){var t;return!!(r(a)&&s()&&(null===(t=a.supports.hostEntity)||void 0===t?void 0:t.tab))}function I(t){if(!t||0==t.length)throw new Error(`Error code: ${i.INVALID_ARGUMENTS}, message: ThreadId cannot be null or empty`)}function g(t){if(!(null==t?void 0:t.internalTabInstanceId)||0===t.internalTabInstanceId.length)throw new Error(`Error code: ${i.INVALID_ARGUMENTS}, message: TabId cannot be null or empty`)}export{f as addAndConfigure,m as getAll,y as isSupported,b as reconfigure,w as remove,T as rename};\n"],"mappings":"AAAA,SAAOA,mCAAmC,IAAIC,CAAC,QAAK,iCAAiC;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,gCAAgC;AAAC,SAAOC,yBAAyB,IAAIC,CAAC,EAACC,eAAe,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,6BAA6B;AAAC,SAAOC,OAAO,IAAIC,CAAC,QAAK,yBAAyB;AAAC,SAAOC,WAAW,IAAIC,CAAC,QAAK,iBAAiB;AAAC,SAAOC,SAAS,IAAIC,CAAC,QAAK,4BAA4B;AAAC,MAAMC,CAAC,GAAC,IAAI;AAAC,MAAMC,CAAC,SAASV,CAAC;EAACW,QAAQA,CAACjB,CAAC,EAAC;IAAC,OAAM,iBAAiB,KAAGA,CAAC,CAACkB,OAAO;EAAA;EAACC,WAAWA,CAACnB,CAAC,EAAC;IAAC,OAAOA,CAAC;EAAA;AAAC;AAAC,MAAMoB,CAAC;EAACC,WAAWA,CAACrB,CAAC,EAAC;IAAC,IAAI,CAACsB,uBAAuB,GAACtB,CAAC;EAAA;EAACuB,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACD,uBAAuB;EAAA;AAAC;AAAC,MAAME,CAAC;EAACH,WAAWA,CAACrB,CAAC,EAAC;IAAC,IAAI,CAACyB,YAAY,GAACzB,CAAC;EAAA;EAACuB,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACE,YAAY;EAAA;AAAC;AAAC,MAAMC,CAAC,SAASpB,CAAC;EAACW,QAAQA,CAACjB,CAAC,EAAC;IAAC,OAAM,iBAAiB,KAAGA,CAAC,CAACkB,OAAO,IAAE,WAAW,KAAGlB,CAAC,CAACkB,OAAO;EAAA;EAACC,WAAWA,CAACnB,CAAC,EAAC;IAAC,OAAOA,CAAC;EAAA;AAAC;AAAC,MAAM2B,CAAC;EAACN,WAAWA,CAACrB,CAAC,EAAC;IAAC,IAAI,CAAC4B,qBAAqB,GAAC5B,CAAC;EAAA;EAACuB,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACK,qBAAqB;EAAA;AAAC;AAAC,MAAMC,CAAC,SAASvB,CAAC;EAACW,QAAQA,CAACjB,CAAC,EAAC;IAAC,OAAOA,CAAC,CAAC8B,OAAO,IAAE9B,CAAC,CAAC8B,OAAO,CAACC,OAAO,CAAE/B,CAAC,IAAE,CAAC,CAAE,CAAC,EAAC,CAAC,CAAC;EAAA;EAACmB,WAAWA,CAACnB,CAAC,EAAC;IAAC,OAAOA,CAAC;EAAA;AAAC;AAAC,SAASgC,CAACA,CAAC5B,CAAC,EAACE,CAAC,EAAC;EAAC,IAAGJ,CAAC,CAACQ,CAAC,CAAC,EAAC,CAACuB,CAAC,CAAC,CAAC,EAAC,MAAM,IAAIC,KAAK,gBAAAC,MAAA,CAAgBrB,CAAC,CAACsB,yBAAyB,yCAAsC,CAAC;EAAC,IAAGC,CAAC,CAACjC,CAAC,CAACkC,QAAQ,CAAC,EAAChC,CAAC,IAAE,CAAC,KAAGA,CAAC,CAACiC,MAAM,EAAC,MAAM,IAAIL,KAAK,gBAAAC,MAAA,CAAgBrB,CAAC,CAAC0B,iBAAiB,kDAA+C,CAAC;EAAC,OAAOxC,CAAC,CAAC,gCAAgC,EAAC,CAAC,IAAIwB,CAAC,CAACpB,CAAC,CAAC,EAACE,CAAC,CAAC,EAAC,IAAIoB,CAAC,CAAD,CAAC,EAAClB,CAAC,CAACO,CAAC,EAAC,gCAAgC,CAAC,CAAC;AAAA;AAAC,SAAS0B,CAACA,CAACrC,CAAC,EAAC;EAAC,IAAGF,CAAC,CAACQ,CAAC,CAAC,EAAC,CAACuB,CAAC,CAAC,CAAC,EAAC,MAAM,IAAIC,KAAK,gBAAAC,MAAA,CAAgBrB,CAAC,CAACsB,yBAAyB,yCAAsC,CAAC;EAAC,OAAOC,CAAC,CAACjC,CAAC,CAACkC,QAAQ,CAAC,EAACtC,CAAC,CAAC,uBAAuB,EAAC,CAAC,IAAIwB,CAAC,CAACpB,CAAC,CAAC,CAAC,EAAC,IAAIyB,CAAC,CAAD,CAAC,EAACrB,CAAC,CAACO,CAAC,EAAC,uBAAuB,CAAC,CAAC;AAAA;AAAC,SAAS2B,CAACA,CAACtC,CAAC,EAACE,CAAC,EAAC;EAAC,IAAGJ,CAAC,CAACQ,CAAC,CAAC,EAAC,CAACuB,CAAC,CAAC,CAAC,EAAC,MAAM,IAAIC,KAAK,gBAAAC,MAAA,CAAgBrB,CAAC,CAACsB,yBAAyB,yCAAsC,CAAC;EAAC,OAAOO,CAAC,CAACvC,CAAC,CAAC,EAACiC,CAAC,CAAC/B,CAAC,CAACgC,QAAQ,CAAC,EAACtC,CAAC,CAAC,4BAA4B,EAAC,CAAC,IAAIoB,CAAC,CAAChB,CAAC,CAAC,EAAC,IAAIoB,CAAC,CAAClB,CAAC,CAAC,CAAC,EAAC,IAAIU,CAAC,CAAD,CAAC,EAACR,CAAC,CAACO,CAAC,EAAC,4BAA4B,CAAC,CAAC;AAAA;AAAC,SAAS6B,CAACA,CAACxC,CAAC,EAACE,CAAC,EAAC;EAAC,IAAGJ,CAAC,CAACQ,CAAC,CAAC,EAAC,CAACuB,CAAC,CAAC,CAAC,EAAC,MAAM,IAAIC,KAAK,gBAAAC,MAAA,CAAgBrB,CAAC,CAACsB,yBAAyB,yCAAsC,CAAC;EAAC,OAAOO,CAAC,CAACvC,CAAC,CAAC,EAACiC,CAAC,CAAC/B,CAAC,CAACgC,QAAQ,CAAC,EAACtC,CAAC,CAAC,uBAAuB,EAAC,CAAC,IAAIoB,CAAC,CAAChB,CAAC,CAAC,EAAC,IAAIoB,CAAC,CAAClB,CAAC,CAAC,CAAC,EAAC,IAAIU,CAAC,CAAD,CAAC,EAACR,CAAC,CAACO,CAAC,EAAC,uBAAuB,CAAC,CAAC;AAAA;AAAC,SAAS8B,CAACA,CAACvC,CAAC,EAACM,CAAC,EAAC;EAAC,IAAGV,CAAC,CAACQ,CAAC,CAAC,EAAC,CAACuB,CAAC,CAAC,CAAC,EAAC,MAAM,IAAIC,KAAK,gBAAAC,MAAA,CAAgBrB,CAAC,CAACsB,yBAAyB,yCAAsC,CAAC;EAAC,OAAOC,CAAC,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,EAACK,CAAC,CAACrC,CAAC,CAAC,EAACN,CAAC,CAAC,uBAAuB,EAAC,CAAC,IAAI2B,CAAC,CAACrB,CAAC,CAAC,EAAC,IAAIkB,CAAC,CAACZ,CAAC,CAAC,CAAC,EAAC,IAAIR,CAAC,CAAD,CAAC,EAACI,CAAC,CAACO,CAAC,EAAC,uBAAuB,CAAC,CAAC;AAAA;AAAC,SAASkB,CAACA,CAAA,EAAE;EAAC,IAAIjC,CAAC;EAAC,OAAM,CAAC,EAAEE,CAAC,CAACQ,CAAC,CAAC,IAAEE,CAAC,CAAC,CAAC,KAAG,IAAI,MAAIZ,CAAC,GAACU,CAAC,CAACoC,QAAQ,CAACC,UAAU,CAAC,IAAE,KAAK,CAAC,KAAG/C,CAAC,GAAC,KAAK,CAAC,GAACA,CAAC,CAACgD,GAAG,CAAC,CAAC;AAAA;AAAC,SAASX,CAACA,CAACrC,CAAC,EAAC;EAAC,IAAG,CAACA,CAAC,IAAE,CAAC,IAAEA,CAAC,CAACuC,MAAM,EAAC,MAAM,IAAIL,KAAK,gBAAAC,MAAA,CAAgBrB,CAAC,CAAC0B,iBAAiB,gDAA6C,CAAC;AAAA;AAAC,SAASG,CAACA,CAAC3C,CAAC,EAAC;EAAC,IAAG,EAAE,IAAI,IAAEA,CAAC,GAAC,KAAK,CAAC,GAACA,CAAC,CAACiD,qBAAqB,CAAC,IAAE,CAAC,KAAGjD,CAAC,CAACiD,qBAAqB,CAACV,MAAM,EAAC,MAAM,IAAIL,KAAK,gBAAAC,MAAA,CAAgBrB,CAAC,CAAC0B,iBAAiB,6CAA0C,CAAC;AAAA;AAAC,SAAOR,CAAC,IAAIkB,eAAe,EAACT,CAAC,IAAIU,MAAM,EAAClB,CAAC,IAAItB,WAAW,EAAC+B,CAAC,IAAIU,WAAW,EAACP,CAAC,IAAIQ,MAAM,EAACT,CAAC,IAAIU,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
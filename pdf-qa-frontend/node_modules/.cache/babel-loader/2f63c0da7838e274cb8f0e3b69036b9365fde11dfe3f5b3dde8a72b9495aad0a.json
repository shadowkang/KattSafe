{"ast":null,"code":"import { handleHostToAppPerformanceMetrics as e } from \"./handlers.js\";\nclass a {\n  static storeCallbackInformation(e, t) {\n    a.callbackInformation.set(e, t);\n  }\n  static clearMessages() {\n    a.callbackInformation.clear();\n  }\n  static deleteMessageInformation(e) {\n    a.callbackInformation.delete(e);\n  }\n  static handleOneWayPerformanceMetrics(a, t, n) {\n    const o = a.monotonicTimestamp;\n    o && n ? e({\n      actionName: a.func,\n      messageDelay: n - o,\n      requestStartedAt: o\n    }) : t(\"Unable to send performance metrics for event %s\", a.func);\n  }\n  static handlePerformanceMetrics(t, n, o, s) {\n    const c = a.callbackInformation.get(t);\n    c && n.monotonicTimestamp && s ? (e({\n      actionName: c.name,\n      messageDelay: s - n.monotonicTimestamp,\n      requestStartedAt: c.calledAt\n    }), a.deleteMessageInformation(t)) : o(\"Unable to send performance metrics for callback %s with arguments %o\", t.toString(), n.args);\n  }\n}\na.callbackInformation = new Map();\nexport { a as default };","map":{"version":3,"names":["handleHostToAppPerformanceMetrics","e","a","storeCallbackInformation","t","callbackInformation","set","clearMessages","clear","deleteMessageInformation","delete","handleOneWayPerformanceMetrics","n","o","monotonicTimestamp","actionName","func","messageDelay","requestStartedAt","handlePerformanceMetrics","s","c","get","name","calledAt","toString","args","Map","default"],"sources":["D:/KattSafe/pdf-qa-frontend/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/hostToAppTelemetry.js"],"sourcesContent":["import{handleHostToAppPerformanceMetrics as e}from\"./handlers.js\";class a{static storeCallbackInformation(e,t){a.callbackInformation.set(e,t)}static clearMessages(){a.callbackInformation.clear()}static deleteMessageInformation(e){a.callbackInformation.delete(e)}static handleOneWayPerformanceMetrics(a,t,n){const o=a.monotonicTimestamp;o&&n?e({actionName:a.func,messageDelay:n-o,requestStartedAt:o}):t(\"Unable to send performance metrics for event %s\",a.func)}static handlePerformanceMetrics(t,n,o,s){const c=a.callbackInformation.get(t);c&&n.monotonicTimestamp&&s?(e({actionName:c.name,messageDelay:s-n.monotonicTimestamp,requestStartedAt:c.calledAt}),a.deleteMessageInformation(t)):o(\"Unable to send performance metrics for callback %s with arguments %o\",t.toString(),n.args)}}a.callbackInformation=new Map;export{a as default};\n"],"mappings":"AAAA,SAAOA,iCAAiC,IAAIC,CAAC,QAAK,eAAe;AAAC,MAAMC,CAAC;EAAC,OAAOC,wBAAwBA,CAACF,CAAC,EAACG,CAAC,EAAC;IAACF,CAAC,CAACG,mBAAmB,CAACC,GAAG,CAACL,CAAC,EAACG,CAAC,CAAC;EAAA;EAAC,OAAOG,aAAaA,CAAA,EAAE;IAACL,CAAC,CAACG,mBAAmB,CAACG,KAAK,CAAC,CAAC;EAAA;EAAC,OAAOC,wBAAwBA,CAACR,CAAC,EAAC;IAACC,CAAC,CAACG,mBAAmB,CAACK,MAAM,CAACT,CAAC,CAAC;EAAA;EAAC,OAAOU,8BAA8BA,CAACT,CAAC,EAACE,CAAC,EAACQ,CAAC,EAAC;IAAC,MAAMC,CAAC,GAACX,CAAC,CAACY,kBAAkB;IAACD,CAAC,IAAED,CAAC,GAACX,CAAC,CAAC;MAACc,UAAU,EAACb,CAAC,CAACc,IAAI;MAACC,YAAY,EAACL,CAAC,GAACC,CAAC;MAACK,gBAAgB,EAACL;IAAC,CAAC,CAAC,GAACT,CAAC,CAAC,iDAAiD,EAACF,CAAC,CAACc,IAAI,CAAC;EAAA;EAAC,OAAOG,wBAAwBA,CAACf,CAAC,EAACQ,CAAC,EAACC,CAAC,EAACO,CAAC,EAAC;IAAC,MAAMC,CAAC,GAACnB,CAAC,CAACG,mBAAmB,CAACiB,GAAG,CAAClB,CAAC,CAAC;IAACiB,CAAC,IAAET,CAAC,CAACE,kBAAkB,IAAEM,CAAC,IAAEnB,CAAC,CAAC;MAACc,UAAU,EAACM,CAAC,CAACE,IAAI;MAACN,YAAY,EAACG,CAAC,GAACR,CAAC,CAACE,kBAAkB;MAACI,gBAAgB,EAACG,CAAC,CAACG;IAAQ,CAAC,CAAC,EAACtB,CAAC,CAACO,wBAAwB,CAACL,CAAC,CAAC,IAAES,CAAC,CAAC,sEAAsE,EAACT,CAAC,CAACqB,QAAQ,CAAC,CAAC,EAACb,CAAC,CAACc,IAAI,CAAC;EAAA;AAAC;AAACxB,CAAC,CAACG,mBAAmB,GAAC,IAAIsB,GAAG,CAAD,CAAC;AAAC,SAAOzB,CAAC,IAAI0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
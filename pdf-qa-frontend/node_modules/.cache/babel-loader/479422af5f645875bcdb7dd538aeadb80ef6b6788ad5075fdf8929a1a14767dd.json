{"ast":null,"code":"import { GlobalVars as e } from \"./globalVars.js\";\nimport { getLogger as t, getApiVersionTag as n } from \"./telemetry.js\";\nconst s = t(\"nestedAppAuthUtils\"),\n  r = s.extend(\"tryPolyfillWithNestedAppAuthBridge\"),\n  o = \"v2\";\nfunction i(t, s, i) {\n  var p;\n  const u = r;\n  if (e.isFramelessWindow) return void u(\"Cannot polyfill nestedAppAuthBridge as current window is frameless\");\n  if (!s) return void u(\"Cannot polyfill nestedAppAuthBridge as current window does not exist\");\n  if (s.parent !== s.top) return void u(\"Default NAA bridge injection not supported in nested iframe. Use standalone NAA bridge instead.\");\n  const a = (() => {\n    try {\n      return JSON.parse(t);\n    } catch (e) {\n      return null;\n    }\n  })();\n  if (!a || !(null === (p = a.supports) || void 0 === p ? void 0 : p.nestedAppAuth)) return void u(\"Cannot polyfill nestedAppAuthBridge as current hub does not support nested app auth\");\n  const l = s;\n  if (l.nestedAppAuthBridge) return void u(\"nestedAppAuthBridge already exists on current window, skipping polyfill\");\n  const A = function (e, t) {\n    const s = d;\n    if (!e) return s(\"nestedAppAuthBridge cannot be created as current window does not exist\"), null;\n    const {\n        onMessage: r,\n        sendPostMessage: i\n      } = t,\n      p = e => t => r(t, e);\n    return {\n      addEventListener: (t, n) => {\n        \"message\" === t ? e.addEventListener(t, p(n)) : s(\"Event \".concat(t, \" is not supported by nestedAppAuthBridge\"));\n      },\n      postMessage: e => {\n        const t = (() => {\n          try {\n            return JSON.parse(e);\n          } catch (e) {\n            return null;\n          }\n        })();\n        if (!t || \"object\" != typeof t || \"NestedAppAuthRequest\" !== t.messageType) return void s(\"Unrecognized data format received by app, message being ignored. Message: %o\", e);\n        const r = n(o, \"nestedAppAuth.execute\");\n        i(e, r);\n      },\n      removeEventListener: (t, n) => {\n        e.removeEventListener(t, p(n));\n      }\n    };\n  }(l, i);\n  A && (l.nestedAppAuthBridge = A);\n}\nconst d = s.extend(\"createNestedAppAuthBridge\");\nexport { o as nestedAppAuthTelemetryVersionNumber, i as tryPolyfillWithNestedAppAuthBridge };","map":{"version":3,"names":["GlobalVars","e","getLogger","t","getApiVersionTag","n","s","r","extend","o","i","p","u","isFramelessWindow","parent","top","a","JSON","parse","supports","nestedAppAuth","l","nestedAppAuthBridge","A","d","onMessage","sendPostMessage","addEventListener","concat","postMessage","messageType","removeEventListener","nestedAppAuthTelemetryVersionNumber","tryPolyfillWithNestedAppAuthBridge"],"sources":["D:/KattSafe/pdf-qa-frontend/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/nestedAppAuthUtils.js"],"sourcesContent":["import{GlobalVars as e}from\"./globalVars.js\";import{getLogger as t,getApiVersionTag as n}from\"./telemetry.js\";const s=t(\"nestedAppAuthUtils\"),r=s.extend(\"tryPolyfillWithNestedAppAuthBridge\"),o=\"v2\";function i(t,s,i){var p;const u=r;if(e.isFramelessWindow)return void u(\"Cannot polyfill nestedAppAuthBridge as current window is frameless\");if(!s)return void u(\"Cannot polyfill nestedAppAuthBridge as current window does not exist\");if(s.parent!==s.top)return void u(\"Default NAA bridge injection not supported in nested iframe. Use standalone NAA bridge instead.\");const a=(()=>{try{return JSON.parse(t)}catch(e){return null}})();if(!a||!(null===(p=a.supports)||void 0===p?void 0:p.nestedAppAuth))return void u(\"Cannot polyfill nestedAppAuthBridge as current hub does not support nested app auth\");const l=s;if(l.nestedAppAuthBridge)return void u(\"nestedAppAuthBridge already exists on current window, skipping polyfill\");const A=function(e,t){const s=d;if(!e)return s(\"nestedAppAuthBridge cannot be created as current window does not exist\"),null;const{onMessage:r,sendPostMessage:i}=t,p=e=>t=>r(t,e);return{addEventListener:(t,n)=>{\"message\"===t?e.addEventListener(t,p(n)):s(`Event ${t} is not supported by nestedAppAuthBridge`)},postMessage:e=>{const t=(()=>{try{return JSON.parse(e)}catch(e){return null}})();if(!t||\"object\"!=typeof t||\"NestedAppAuthRequest\"!==t.messageType)return void s(\"Unrecognized data format received by app, message being ignored. Message: %o\",e);const r=n(o,\"nestedAppAuth.execute\");i(e,r)},removeEventListener:(t,n)=>{e.removeEventListener(t,p(n))}}}(l,i);A&&(l.nestedAppAuthBridge=A)}const d=s.extend(\"createNestedAppAuthBridge\");export{o as nestedAppAuthTelemetryVersionNumber,i as tryPolyfillWithNestedAppAuthBridge};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { getApiVersionTag as e } from \"./telemetry.js\";\nimport { VideoFrameTick as t } from \"./videoFrameTick.js\";\nimport { VideoPerformanceStatistics as r } from \"./videoPerformanceStatistics.js\";\nconst i = \"v2\";\nclass s {\n  constructor(t) {\n    this.reportPerformanceEvent = t, this.isFirstFrameProcessed = !1, this.frameProcessTimeLimit = 100, this.frameProcessingStartedAt = 0, this.frameProcessingTimeCost = 0, this.processedFrameCount = 0, this.performanceStatistics = new r(s.distributionBinSize, t => this.reportPerformanceEvent(e(i, \"videoPerformanceMonitor.performanceDataGenerated\"), \"video.performance.performanceDataGenerated\", [t]));\n  }\n  startMonitorSlowFrameProcessing() {\n    t.setInterval(() => {\n      if (0 === this.processedFrameCount) return;\n      const t = this.frameProcessingTimeCost / this.processedFrameCount;\n      t > this.frameProcessTimeLimit && this.reportPerformanceEvent(e(i, \"videoPerformanceMonitor.startMonitorSlowFrameProcessing\"), \"video.performance.frameProcessingSlow\", [t]), this.frameProcessingTimeCost = 0, this.processedFrameCount = 0;\n    }, s.calculateFPSInterval);\n  }\n  setFrameProcessTimeLimit(e) {\n    this.frameProcessTimeLimit = e;\n  }\n  reportApplyingVideoEffect(e, t) {\n    var r, i;\n    (null === (r = this.applyingEffect) || void 0 === r ? void 0 : r.effectId) === e && (null === (i = this.applyingEffect) || void 0 === i ? void 0 : i.effectParam) === t || (this.applyingEffect = {\n      effectId: e,\n      effectParam: t\n    }, this.appliedEffect = void 0);\n  }\n  reportVideoEffectChanged(e, t) {\n    void 0 === this.applyingEffect || this.applyingEffect.effectId !== e && this.applyingEffect.effectParam !== t || (this.appliedEffect = {\n      effectId: e,\n      effectParam: t\n    }, this.applyingEffect = void 0, this.isFirstFrameProcessed = !1);\n  }\n  reportStartFrameProcessing(e, r) {\n    t.tick(), this.appliedEffect && (this.frameProcessingStartedAt = performance.now(), this.performanceStatistics.processStarts(this.appliedEffect.effectId, e, r, this.appliedEffect.effectParam));\n  }\n  reportFrameProcessed() {\n    var t;\n    this.appliedEffect && (this.processedFrameCount++, this.frameProcessingTimeCost += performance.now() - this.frameProcessingStartedAt, this.performanceStatistics.processEnds(), this.isFirstFrameProcessed || (this.isFirstFrameProcessed = !0, this.reportPerformanceEvent(e(i, \"videoPerformanceMonitor.reportFrameProcessed\"), \"video.performance.firstFrameProcessed\", [Date.now(), this.appliedEffect.effectId, null === (t = this.appliedEffect) || void 0 === t ? void 0 : t.effectParam])));\n  }\n  reportGettingTextureStream(e) {\n    this.gettingTextureStreamStartedAt = performance.now(), this.currentStreamId = e;\n  }\n  reportTextureStreamAcquired() {\n    if (void 0 !== this.gettingTextureStreamStartedAt) {\n      const t = performance.now() - this.gettingTextureStreamStartedAt;\n      this.reportPerformanceEvent(e(i, \"videoPerformanceMonitor.reportTextureStreamAcquired\"), \"video.performance.textureStreamAcquired\", [this.currentStreamId, t]);\n    }\n  }\n}\ns.distributionBinSize = 1e3, s.calculateFPSInterval = 1e3;\nexport { s as VideoPerformanceMonitor };","map":{"version":3,"names":["getApiVersionTag","e","VideoFrameTick","t","VideoPerformanceStatistics","r","i","s","constructor","reportPerformanceEvent","isFirstFrameProcessed","frameProcessTimeLimit","frameProcessingStartedAt","frameProcessingTimeCost","processedFrameCount","performanceStatistics","distributionBinSize","startMonitorSlowFrameProcessing","setInterval","calculateFPSInterval","setFrameProcessTimeLimit","reportApplyingVideoEffect","applyingEffect","effectId","effectParam","appliedEffect","reportVideoEffectChanged","reportStartFrameProcessing","tick","performance","now","processStarts","reportFrameProcessed","processEnds","Date","reportGettingTextureStream","gettingTextureStreamStartedAt","currentStreamId","reportTextureStreamAcquired","VideoPerformanceMonitor"],"sources":["D:/KattSafe/pdf-qa-frontend/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/videoPerformanceMonitor.js"],"sourcesContent":["import{getApiVersionTag as e}from\"./telemetry.js\";import{VideoFrameTick as t}from\"./videoFrameTick.js\";import{VideoPerformanceStatistics as r}from\"./videoPerformanceStatistics.js\";const i=\"v2\";class s{constructor(t){this.reportPerformanceEvent=t,this.isFirstFrameProcessed=!1,this.frameProcessTimeLimit=100,this.frameProcessingStartedAt=0,this.frameProcessingTimeCost=0,this.processedFrameCount=0,this.performanceStatistics=new r(s.distributionBinSize,(t=>this.reportPerformanceEvent(e(i,\"videoPerformanceMonitor.performanceDataGenerated\"),\"video.performance.performanceDataGenerated\",[t])))}startMonitorSlowFrameProcessing(){t.setInterval((()=>{if(0===this.processedFrameCount)return;const t=this.frameProcessingTimeCost/this.processedFrameCount;t>this.frameProcessTimeLimit&&this.reportPerformanceEvent(e(i,\"videoPerformanceMonitor.startMonitorSlowFrameProcessing\"),\"video.performance.frameProcessingSlow\",[t]),this.frameProcessingTimeCost=0,this.processedFrameCount=0}),s.calculateFPSInterval)}setFrameProcessTimeLimit(e){this.frameProcessTimeLimit=e}reportApplyingVideoEffect(e,t){var r,i;(null===(r=this.applyingEffect)||void 0===r?void 0:r.effectId)===e&&(null===(i=this.applyingEffect)||void 0===i?void 0:i.effectParam)===t||(this.applyingEffect={effectId:e,effectParam:t},this.appliedEffect=void 0)}reportVideoEffectChanged(e,t){void 0===this.applyingEffect||this.applyingEffect.effectId!==e&&this.applyingEffect.effectParam!==t||(this.appliedEffect={effectId:e,effectParam:t},this.applyingEffect=void 0,this.isFirstFrameProcessed=!1)}reportStartFrameProcessing(e,r){t.tick(),this.appliedEffect&&(this.frameProcessingStartedAt=performance.now(),this.performanceStatistics.processStarts(this.appliedEffect.effectId,e,r,this.appliedEffect.effectParam))}reportFrameProcessed(){var t;this.appliedEffect&&(this.processedFrameCount++,this.frameProcessingTimeCost+=performance.now()-this.frameProcessingStartedAt,this.performanceStatistics.processEnds(),this.isFirstFrameProcessed||(this.isFirstFrameProcessed=!0,this.reportPerformanceEvent(e(i,\"videoPerformanceMonitor.reportFrameProcessed\"),\"video.performance.firstFrameProcessed\",[Date.now(),this.appliedEffect.effectId,null===(t=this.appliedEffect)||void 0===t?void 0:t.effectParam])))}reportGettingTextureStream(e){this.gettingTextureStreamStartedAt=performance.now(),this.currentStreamId=e}reportTextureStreamAcquired(){if(void 0!==this.gettingTextureStreamStartedAt){const t=performance.now()-this.gettingTextureStreamStartedAt;this.reportPerformanceEvent(e(i,\"videoPerformanceMonitor.reportTextureStreamAcquired\"),\"video.performance.textureStreamAcquired\",[this.currentStreamId,t])}}}s.distributionBinSize=1e3,s.calculateFPSInterval=1e3;export{s as VideoPerformanceMonitor};\n"],"mappings":"AAAA,SAAOA,gBAAgB,IAAIC,CAAC,QAAK,gBAAgB;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,0BAA0B,IAAIC,CAAC,QAAK,iCAAiC;AAAC,MAAMC,CAAC,GAAC,IAAI;AAAC,MAAMC,CAAC;EAACC,WAAWA,CAACL,CAAC,EAAC;IAAC,IAAI,CAACM,sBAAsB,GAACN,CAAC,EAAC,IAAI,CAACO,qBAAqB,GAAC,CAAC,CAAC,EAAC,IAAI,CAACC,qBAAqB,GAAC,GAAG,EAAC,IAAI,CAACC,wBAAwB,GAAC,CAAC,EAAC,IAAI,CAACC,uBAAuB,GAAC,CAAC,EAAC,IAAI,CAACC,mBAAmB,GAAC,CAAC,EAAC,IAAI,CAACC,qBAAqB,GAAC,IAAIV,CAAC,CAACE,CAAC,CAACS,mBAAmB,EAAEb,CAAC,IAAE,IAAI,CAACM,sBAAsB,CAACR,CAAC,CAACK,CAAC,EAAC,kDAAkD,CAAC,EAAC,4CAA4C,EAAC,CAACH,CAAC,CAAC,CAAE,CAAC;EAAA;EAACc,+BAA+BA,CAAA,EAAE;IAACd,CAAC,CAACe,WAAW,CAAE,MAAI;MAAC,IAAG,CAAC,KAAG,IAAI,CAACJ,mBAAmB,EAAC;MAAO,MAAMX,CAAC,GAAC,IAAI,CAACU,uBAAuB,GAAC,IAAI,CAACC,mBAAmB;MAACX,CAAC,GAAC,IAAI,CAACQ,qBAAqB,IAAE,IAAI,CAACF,sBAAsB,CAACR,CAAC,CAACK,CAAC,EAAC,yDAAyD,CAAC,EAAC,uCAAuC,EAAC,CAACH,CAAC,CAAC,CAAC,EAAC,IAAI,CAACU,uBAAuB,GAAC,CAAC,EAAC,IAAI,CAACC,mBAAmB,GAAC,CAAC;IAAA,CAAC,EAAEP,CAAC,CAACY,oBAAoB,CAAC;EAAA;EAACC,wBAAwBA,CAACnB,CAAC,EAAC;IAAC,IAAI,CAACU,qBAAqB,GAACV,CAAC;EAAA;EAACoB,yBAAyBA,CAACpB,CAAC,EAACE,CAAC,EAAC;IAAC,IAAIE,CAAC,EAACC,CAAC;IAAC,CAAC,IAAI,MAAID,CAAC,GAAC,IAAI,CAACiB,cAAc,CAAC,IAAE,KAAK,CAAC,KAAGjB,CAAC,GAAC,KAAK,CAAC,GAACA,CAAC,CAACkB,QAAQ,MAAItB,CAAC,IAAE,CAAC,IAAI,MAAIK,CAAC,GAAC,IAAI,CAACgB,cAAc,CAAC,IAAE,KAAK,CAAC,KAAGhB,CAAC,GAAC,KAAK,CAAC,GAACA,CAAC,CAACkB,WAAW,MAAIrB,CAAC,KAAG,IAAI,CAACmB,cAAc,GAAC;MAACC,QAAQ,EAACtB,CAAC;MAACuB,WAAW,EAACrB;IAAC,CAAC,EAAC,IAAI,CAACsB,aAAa,GAAC,KAAK,CAAC,CAAC;EAAA;EAACC,wBAAwBA,CAACzB,CAAC,EAACE,CAAC,EAAC;IAAC,KAAK,CAAC,KAAG,IAAI,CAACmB,cAAc,IAAE,IAAI,CAACA,cAAc,CAACC,QAAQ,KAAGtB,CAAC,IAAE,IAAI,CAACqB,cAAc,CAACE,WAAW,KAAGrB,CAAC,KAAG,IAAI,CAACsB,aAAa,GAAC;MAACF,QAAQ,EAACtB,CAAC;MAACuB,WAAW,EAACrB;IAAC,CAAC,EAAC,IAAI,CAACmB,cAAc,GAAC,KAAK,CAAC,EAAC,IAAI,CAACZ,qBAAqB,GAAC,CAAC,CAAC,CAAC;EAAA;EAACiB,0BAA0BA,CAAC1B,CAAC,EAACI,CAAC,EAAC;IAACF,CAAC,CAACyB,IAAI,CAAC,CAAC,EAAC,IAAI,CAACH,aAAa,KAAG,IAAI,CAACb,wBAAwB,GAACiB,WAAW,CAACC,GAAG,CAAC,CAAC,EAAC,IAAI,CAACf,qBAAqB,CAACgB,aAAa,CAAC,IAAI,CAACN,aAAa,CAACF,QAAQ,EAACtB,CAAC,EAACI,CAAC,EAAC,IAAI,CAACoB,aAAa,CAACD,WAAW,CAAC,CAAC;EAAA;EAACQ,oBAAoBA,CAAA,EAAE;IAAC,IAAI7B,CAAC;IAAC,IAAI,CAACsB,aAAa,KAAG,IAAI,CAACX,mBAAmB,EAAE,EAAC,IAAI,CAACD,uBAAuB,IAAEgB,WAAW,CAACC,GAAG,CAAC,CAAC,GAAC,IAAI,CAAClB,wBAAwB,EAAC,IAAI,CAACG,qBAAqB,CAACkB,WAAW,CAAC,CAAC,EAAC,IAAI,CAACvB,qBAAqB,KAAG,IAAI,CAACA,qBAAqB,GAAC,CAAC,CAAC,EAAC,IAAI,CAACD,sBAAsB,CAACR,CAAC,CAACK,CAAC,EAAC,8CAA8C,CAAC,EAAC,uCAAuC,EAAC,CAAC4B,IAAI,CAACJ,GAAG,CAAC,CAAC,EAAC,IAAI,CAACL,aAAa,CAACF,QAAQ,EAAC,IAAI,MAAIpB,CAAC,GAAC,IAAI,CAACsB,aAAa,CAAC,IAAE,KAAK,CAAC,KAAGtB,CAAC,GAAC,KAAK,CAAC,GAACA,CAAC,CAACqB,WAAW,CAAC,CAAC,CAAC,CAAC;EAAA;EAACW,0BAA0BA,CAAClC,CAAC,EAAC;IAAC,IAAI,CAACmC,6BAA6B,GAACP,WAAW,CAACC,GAAG,CAAC,CAAC,EAAC,IAAI,CAACO,eAAe,GAACpC,CAAC;EAAA;EAACqC,2BAA2BA,CAAA,EAAE;IAAC,IAAG,KAAK,CAAC,KAAG,IAAI,CAACF,6BAA6B,EAAC;MAAC,MAAMjC,CAAC,GAAC0B,WAAW,CAACC,GAAG,CAAC,CAAC,GAAC,IAAI,CAACM,6BAA6B;MAAC,IAAI,CAAC3B,sBAAsB,CAACR,CAAC,CAACK,CAAC,EAAC,qDAAqD,CAAC,EAAC,yCAAyC,EAAC,CAAC,IAAI,CAAC+B,eAAe,EAAClC,CAAC,CAAC,CAAC;IAAA;EAAC;AAAC;AAACI,CAAC,CAACS,mBAAmB,GAAC,GAAG,EAACT,CAAC,CAACY,oBAAoB,GAAC,GAAG;AAAC,SAAOZ,CAAC,IAAIgC,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Send,Bot,User,Copy,RefreshCw,AlertCircle}from'lucide-react';import MessageBubble from'./MessageBubble';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatInterface=_ref=>{let{selectedPdf,ocrMethod,apiStatus}=_ref;const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const messagesEndRef=useRef(null);const inputRef=useRef(null);// Sample questions for quick testing\nconst sampleQuestions=[\"What is this manual about?\",\"What are the safety requirements?\",\"How do you operate this equipment?\",\"What are the maintenance procedures?\",\"What are the specifications or technical details?\"];useEffect(()=>{scrollToBottom();},[messages]);useEffect(()=>{// Add welcome message when component mounts\nif(messages.length===0){setMessages([{id:1,type:'bot',content:\"👋 Hello! I'm your PDF Question Answering assistant. I can help you find information from your PDF documents using advanced OCR technology. Ask me anything about the selected PDF!\",timestamp:new Date(),confidence:null,citations:[]}]);}},[]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const sendMessage=async function(){let messageText=arguments.length>0&&arguments[0]!==undefined?arguments[0]:inputMessage;if(!messageText.trim()||isLoading||apiStatus!=='connected')return;const userMessage={id:Date.now(),type:'user',content:messageText.trim(),timestamp:new Date()};setMessages(prev=>[...prev,userMessage]);setInputMessage('');setIsLoading(true);try{const response=await fetch('/ask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({question:messageText.trim(),pdf:selectedPdf,ocr_method:ocrMethod,format:'json'})});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();const botMessage={id:Date.now()+1,type:'bot',content:data.answer||'No answer received',timestamp:new Date(),confidence:data.confidence,citations:data.citations||[],language:data.language,pdf:data.pdf,ocrMethod:data.ocr_method};setMessages(prev=>[...prev,botMessage]);}catch(error){console.error('Error sending message:',error);const errorMessage={id:Date.now()+1,type:'bot',content:\"\\u274C Sorry, I encountered an error: \".concat(error.message,\". Please check if the API server is running and try again.\"),timestamp:new Date(),confidence:null,citations:[],isError:true};setMessages(prev=>[...prev,errorMessage]);}finally{setIsLoading(false);}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();sendMessage();}};const clearChat=()=>{setMessages([{id:1,type:'bot',content:\"Chat cleared! How can I help you with your PDF documents?\",timestamp:new Date(),confidence:null,citations:[]}]);};const copyToClipboard=text=>{navigator.clipboard.writeText(text).then(()=>{// Could add a toast notification here\n});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-interface\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title\",children:[/*#__PURE__*/_jsx(Bot,{size:20}),\"PDF QA Assistant\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-info\",children:[\"PDF: \",/*#__PURE__*/_jsx(\"strong\",{children:selectedPdf}),\" | OCR: \",/*#__PURE__*/_jsx(\"strong\",{children:ocrMethod})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary btn-sm\",onClick:clearChat,title:\"Clear Chat\",children:[/*#__PURE__*/_jsx(RefreshCw,{size:16}),\"Clear\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.map(message=>/*#__PURE__*/_jsx(MessageBubble,{message:message,onCopy:copyToClipboard},message.id)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble bot-message loading-message fade-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:/*#__PURE__*/_jsx(Bot,{size:16})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-meta\",children:\"Processing your question...\"})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),apiStatus!=='connected'&&/*#__PURE__*/_jsxs(\"div\",{className:\"connection-warning\",children:[/*#__PURE__*/_jsx(AlertCircle,{size:16}),\"API connection required to send messages\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sample-questions\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sample-questions-title\",children:\"\\uD83D\\uDCA1 Sample Questions:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sample-questions-list\",children:sampleQuestions.map((question,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"sample-question-btn\",onClick:()=>sendMessage(question),disabled:isLoading||apiStatus!=='connected',children:question},index))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-input-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-wrapper\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:inputRef,className:\"chat-input\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Ask a question about your PDF document...\",rows:1,disabled:isLoading||apiStatus!=='connected'}),/*#__PURE__*/_jsx(\"button\",{className:\"send-button\",onClick:()=>sendMessage(),disabled:!inputMessage.trim()||isLoading||apiStatus!=='connected',children:/*#__PURE__*/_jsx(Send,{size:18})})]})})]});};export default ChatInterface;","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","Bot","User","Copy","RefreshCw","AlertCircle","MessageBubble","jsx","_jsx","jsxs","_jsxs","ChatInterface","_ref","selectedPdf","ocrMethod","apiStatus","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","messagesEndRef","inputRef","sampleQuestions","scrollToBottom","length","id","type","content","timestamp","Date","confidence","citations","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","messageText","arguments","undefined","trim","userMessage","now","prev","response","fetch","method","headers","body","JSON","stringify","question","pdf","ocr_method","format","ok","Error","concat","status","data","json","botMessage","answer","language","error","console","errorMessage","message","isError","handleKeyPress","e","key","shiftKey","preventDefault","clearChat","copyToClipboard","text","navigator","clipboard","writeText","then","className","children","size","onClick","title","map","onCopy","ref","index","disabled","value","onChange","target","onKeyPress","placeholder","rows"],"sources":["D:/KattSafe/pdf-qa-frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Send, Bot, User, Copy, RefreshCw, AlertCircle } from 'lucide-react';\r\nimport MessageBubble from './MessageBubble';\r\n\r\nconst ChatInterface = ({ selectedPdf, ocrMethod, apiStatus }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // Sample questions for quick testing\r\n  const sampleQuestions = [\r\n    \"What is this manual about?\",\r\n    \"What are the safety requirements?\",\r\n    \"How do you operate this equipment?\",\r\n    \"What are the maintenance procedures?\",\r\n    \"What are the specifications or technical details?\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Add welcome message when component mounts\r\n    if (messages.length === 0) {\r\n      setMessages([{\r\n        id: 1,\r\n        type: 'bot',\r\n        content: \"👋 Hello! I'm your PDF Question Answering assistant. I can help you find information from your PDF documents using advanced OCR technology. Ask me anything about the selected PDF!\",\r\n        timestamp: new Date(),\r\n        confidence: null,\r\n        citations: []\r\n      }]);\r\n    }\r\n  }, []);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const sendMessage = async (messageText = inputMessage) => {\r\n    if (!messageText.trim() || isLoading || apiStatus !== 'connected') return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: messageText.trim(),\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('/ask', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          question: messageText.trim(),\r\n          pdf: selectedPdf,\r\n          ocr_method: ocrMethod,\r\n          format: 'json'\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: data.answer || 'No answer received',\r\n        timestamp: new Date(),\r\n        confidence: data.confidence,\r\n        citations: data.citations || [],\r\n        language: data.language,\r\n        pdf: data.pdf,\r\n        ocrMethod: data.ocr_method\r\n      };\r\n\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      \r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: `❌ Sorry, I encountered an error: ${error.message}. Please check if the API server is running and try again.`,\r\n        timestamp: new Date(),\r\n        confidence: null,\r\n        citations: [],\r\n        isError: true\r\n      };\r\n\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const clearChat = () => {\r\n    setMessages([{\r\n      id: 1,\r\n      type: 'bot',\r\n      content: \"Chat cleared! How can I help you with your PDF documents?\",\r\n      timestamp: new Date(),\r\n      confidence: null,\r\n      citations: []\r\n    }]);\r\n  };\r\n\r\n  const copyToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text).then(() => {\r\n      // Could add a toast notification here\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-interface\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-title\">\r\n          <Bot size={20} />\r\n          PDF QA Assistant\r\n        </div>\r\n        <div className=\"chat-info\">\r\n          PDF: <strong>{selectedPdf}</strong> | OCR: <strong>{ocrMethod}</strong>\r\n        </div>\r\n        <button \r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={clearChat}\r\n          title=\"Clear Chat\"\r\n        >\r\n          <RefreshCw size={16} />\r\n          Clear\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"messages-container\">\r\n        {messages.map((message) => (\r\n          <MessageBubble\r\n            key={message.id}\r\n            message={message}\r\n            onCopy={copyToClipboard}\r\n          />\r\n        ))}\r\n        \r\n        {isLoading && (\r\n          <div className=\"message-bubble bot-message loading-message fade-in\">\r\n            <div className=\"message-avatar\">\r\n              <Bot size={16} />\r\n            </div>\r\n            <div className=\"message-content\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n              <div className=\"message-meta\">\r\n                Processing your question...\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {apiStatus !== 'connected' && (\r\n        <div className=\"connection-warning\">\r\n          <AlertCircle size={16} />\r\n          API connection required to send messages\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"sample-questions\">\r\n        <div className=\"sample-questions-title\">💡 Sample Questions:</div>\r\n        <div className=\"sample-questions-list\">\r\n          {sampleQuestions.map((question, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"sample-question-btn\"\r\n              onClick={() => sendMessage(question)}\r\n              disabled={isLoading || apiStatus !== 'connected'}\r\n            >\r\n              {question}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-input-container\">\r\n        <div className=\"chat-input-wrapper\">\r\n          <textarea\r\n            ref={inputRef}\r\n            className=\"chat-input\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask a question about your PDF document...\"\r\n            rows={1}\r\n            disabled={isLoading || apiStatus !== 'connected'}\r\n          />\r\n          <button\r\n            className=\"send-button\"\r\n            onClick={() => sendMessage()}\r\n            disabled={!inputMessage.trim() || isLoading || apiStatus !== 'connected'}\r\n          >\r\n            <Send size={18} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
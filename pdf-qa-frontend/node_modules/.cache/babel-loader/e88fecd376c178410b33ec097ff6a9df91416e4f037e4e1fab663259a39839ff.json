{"ast":null,"code":"var _jsxFileName = \"D:\\\\KattSafe\\\\pdf-qa-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatInterface from './components/ChatInterface';\nimport Header from './components/Header';\nimport StatusPanel from './components/StatusPanel';\nimport './App.css';\nimport './components/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apiStatus, setApiStatus] = useState('checking');\n  const [availablePdfs, setAvailablePdfs] = useState([]);\n  const [selectedPdf, setSelectedPdf] = useState('harness_gear');\n  const [ocrMethod, setOcrMethod] = useState('pymupdf');\n\n  // Check API status on component mount\n  useEffect(() => {\n    checkApiStatus();\n  }, []);\n  const checkApiStatus = async () => {\n    try {\n      const response = await fetch('/health');\n      if (response.ok) {\n        const data = await response.json();\n        setApiStatus('connected');\n        setAvailablePdfs(data.available_pdfs || []);\n      } else {\n        setApiStatus('error');\n      }\n    } catch (error) {\n      console.error('API health check failed:', error);\n      setApiStatus('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      apiStatus: apiStatus,\n      onRefresh: checkApiStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(StatusPanel, {\n        apiStatus: apiStatus,\n        availablePdfs: availablePdfs,\n        selectedPdf: selectedPdf,\n        ocrMethod: ocrMethod,\n        onPdfChange: setSelectedPdf,\n        onOcrMethodChange: setOcrMethod,\n        onRefresh: checkApiStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInterface, {\n        selectedPdf: selectedPdf,\n        ocrMethod: ocrMethod,\n        apiStatus: apiStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uzP0ACvuLrOYxOCJbdp+Ot8DQm0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatInterface","Header","StatusPanel","jsxDEV","_jsxDEV","App","_s","apiStatus","setApiStatus","availablePdfs","setAvailablePdfs","selectedPdf","setSelectedPdf","ocrMethod","setOcrMethod","checkApiStatus","response","fetch","ok","data","json","available_pdfs","error","console","className","children","onRefresh","fileName","_jsxFileName","lineNumber","columnNumber","onPdfChange","onOcrMethodChange","_c","$RefreshReg$"],"sources":["D:/KattSafe/pdf-qa-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ChatInterface from './components/ChatInterface';\r\nimport Header from './components/Header';\r\nimport StatusPanel from './components/StatusPanel';\r\nimport './App.css';\r\nimport './components/styles.css';\r\n\r\nfunction App() {\r\n  const [apiStatus, setApiStatus] = useState('checking');\r\n  const [availablePdfs, setAvailablePdfs] = useState([]);\r\n  const [selectedPdf, setSelectedPdf] = useState('harness_gear');\r\n  const [ocrMethod, setOcrMethod] = useState('pymupdf');\r\n\r\n  // Check API status on component mount\r\n  useEffect(() => {\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  const checkApiStatus = async () => {\r\n    try {\r\n      const response = await fetch('/health');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setApiStatus('connected');\r\n        setAvailablePdfs(data.available_pdfs || []);\r\n      } else {\r\n        setApiStatus('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('API health check failed:', error);\r\n      setApiStatus('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header \r\n        apiStatus={apiStatus} \r\n        onRefresh={checkApiStatus}\r\n      />\r\n      \r\n      <div className=\"app-container\">\r\n        <StatusPanel \r\n          apiStatus={apiStatus}\r\n          availablePdfs={availablePdfs}\r\n          selectedPdf={selectedPdf}\r\n          ocrMethod={ocrMethod}\r\n          onPdfChange={setSelectedPdf}\r\n          onOcrMethodChange={setOcrMethod}\r\n          onRefresh={checkApiStatus}\r\n        />\r\n        \r\n        <ChatInterface \r\n          selectedPdf={selectedPdf}\r\n          ocrMethod={ocrMethod}\r\n          apiStatus={apiStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW;AAClB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,cAAc,CAAC;EAC9D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAM;IACdgB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,CAAC;MACvC,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCZ,YAAY,CAAC,WAAW,CAAC;QACzBE,gBAAgB,CAACS,IAAI,CAACE,cAAc,IAAI,EAAE,CAAC;MAC7C,CAAC,MAAM;QACLb,YAAY,CAAC,OAAO,CAAC;MACvB;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDd,YAAY,CAAC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA,CAACH,MAAM;MACLM,SAAS,EAAEA,SAAU;MACrBmB,SAAS,EAAEX;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAEF1B,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BrB,OAAA,CAACF,WAAW;QACVK,SAAS,EAAEA,SAAU;QACrBE,aAAa,EAAEA,aAAc;QAC7BE,WAAW,EAAEA,WAAY;QACzBE,SAAS,EAAEA,SAAU;QACrBkB,WAAW,EAAEnB,cAAe;QAC5BoB,iBAAiB,EAAElB,YAAa;QAChCY,SAAS,EAAEX;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAEF1B,OAAA,CAACJ,aAAa;QACZW,WAAW,EAAEA,WAAY;QACzBE,SAAS,EAAEA,SAAU;QACrBN,SAAS,EAAEA;MAAU;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CArDQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}